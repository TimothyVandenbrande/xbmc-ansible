---
- name: installing dependencies
  apt: pkg{{ item }} state=present
  with_items:
    - python-software-properties
    - software-properties-common
  sudo: yes

- name: fix Locale bug
  lineinfile: dest=/etc/environment line='{{ item }}' state=present create=yes
  with_items:
    - 'LC_MESSAGES="C"'
    - 'LC_ALL=\"en_US.UTF-8\"'
  sudo: yes

- name: fix USB automount
  lineinfile: dest=/etc/modules line="usb-storage" state=present create=yes
  sudo: yes

- name: fix USB autommount
  copy: src=media-by-label-auto-mount.rules dest=/etc/udev/rules.d/media-by-label-auto-mount.rules owner=root groupt=root mode=0644
  sudo: yes

- name: apply XBMC nice Level Permissions
  lineinfile: dest=/etc/security/limits.conf line="{{ XBMC_USER }}             -       nice            -1" state=present create=yes
  sudo: yes

- name: add user to required groups
  user: name={{ XBMC_USER }} groups="video,audio,users,fuse,cdrom,plugdev,dialout"
  sudo: yes

- name: add XBMC PPA
  apt_repository: repo='{{ XBMC_PPA }}' state=present

- name: Update Ubuntu with latest packages
  apt: upgrade=dist
  sudo: yes

- include: nvidia.yml
  when: GFX_CARD == "NVIDIA"

##############################
#            TODO            #
##############################
#
#- include: intel.yml
#  when: GFX_CARD == "Intel"
#
#- include: amd.yml
#  when: GFX_CARD == "AMD"
#
##############################

- name: install Xinit
  apt: pkg=xinit state=present
  sudo: yes

- name: install XBMC
  apt: pkg=xbmc state=present
  sudo: yes

- name: disable Autorun
  shell: update-rc.d xbmc remove
  sudo: yes

- name: replace Autorun
  copy: src=xbmc_upstart_script dest={{ XBMC_INIT_CONF_FILE }} owner=root group=root mode=0644
  sudo: yes

- name: link XBMC startup script
  file: src={{ XBMC_INIT_CONF_FILE }} dest={{ UPSTART_JOB_FILE }} owner=root group=root mode=
0644
  sudo: yes

- name: prepare install XBMC Bootscreen
  apt: pkg={{ item }} state=present
  with_items:
    - plymouth-label
    - v86d
  sudo: yes

- name: copy bootscreen install file
  copy: src=plymouth-theme-xbmc-logo.deb dest=/home/{{ XBMC_USER }} owner=xbmc group=xbmc mode=0644

- name: install XBMC bootsceen
  shell: 
    - sudo dpkg -i /home/{{ XBMC_USER }}/plymouth-theme-xbmc-logo.deb
    - update-alternatives --install /lib/plymouth/themes/default.plymouth default.plymouth /lib/plymouth/themes/xbmc-logo/xbmc-logo.plymouth 100
  sudo: yes

- name: set XBMC Bootscreen
  lineinfile: dest=/etc/initramfs-tools/conf.d/splash line="FRAMEBUFFER=y" state=present
  sudo: yes


- name: set Screen resolution to {{ RESOLUTION }}
  shell:  sed -i '/gfxmode=/ a\  set gfxpayload=keep' '{{ GRUB_HEADER_FILE }}'
  sudo: yes

- name: set Screen resolution to {{ RESOLUTION }}
  lineinfile: dest={{ GRUB_HEADER_FILE }} line='{{ item }}' state=present
  with_items:
    - 'GRUB_CMDLINE_LINUX="{{ GRUB_CONFIG }}"'
    - 'GRUB_GFXMODE={{ RESOLUTION }}'
    - 'GRUB_RECORDFAIL_TIMEOUT=0'
  sudo: yes

- name: set Screen resolution to {{ RESOLUTION }}
  lineinfile: dest={{ INITRAMFS_MODULES_FILE  }} regex='uvesafb mode_option=' line='uvesafb mode_option={{ RESOLUTION }}-24 mtrr=3 scroll=ywrap' state=present

- name: update screen resolution
  shell: {{ item }}
  with_items:
    - update-grub
    - update-initramfs -u
  sudo: yes

- name: reconfigure Xserver
  lineinfile: dest={{ XWRAPPER_FILE }} line="allowed_users=anybody" state=present
  sudo: yes

- name: install PowerManagement
  apt: pkg={{ item }} state=present
  with_items:
    - policykit-1
    - upower
    - udisks
    - acpi-support
    - consolekit
    - pm-utils

- name: template PowerManagement
  template: custom-actions.pkla.j2 dest={{ POWERMANAGEMENT_DIR }}custom-actions.pkla
  sudo: yes

- name: install Audio
  apt: pkg={{ item }} state=present
  with_items:
    - linux-sound-base
    - alsa-base
    - alsa-utils
  sudo: yes

- name: up volume
  shell: amixer sset Master,0 100% 100%

- name: get XBMC Addons Repositories Installer
  copy: src=plugin.program.repo.installer-1.0.5.tar.gz /home/{{ XBMC_USER }}/plugin.program.repo.installer-1.0.5.tar.gz owner={{ XBMC_USER }} group={{ XBMC_USER }} mode=0644
  sudo: yes

- name: install XBMC Addons Repositories Installer
  shell: tar -xvzf /home/{{ XBMC_USER }}/plugin.program.repo.installer-1.0.5.tar.gz -C {{ XBMC_ADDONS_DIR }}

- name: install LM Sensors
  apt: pkg=lm-sensors state=present
  sudo: yes

- name: prepare Temp monitoring for AdvSettings
  lineinfile: dest={{ XBMC_ADVANCEDSETTINGS_FILE }} line={{ item }} state=present
  with_items:
    - '<advancedsettings>'
    - '</advancedsettings>'

- name: add Temp monitory to AdvSettings
    lineinfile: dest={{ XBMC_ADVANCEDSETTINGS_FILE }} line={{ item }} insertafter="<advancedsettings>" state=present
  with_items:
    - '<gputempcommand>echo "$(nvidia-settings -c :0 -tq GPUCoreTemp) C"</gputempcommand>'
    - '<cputempcommand>echo "$(sensors -u | head -6 |grep "temp2_input"| awk '{print $2 }' |awk '{printf("%d\n",$1 + 0.5);}') C"</cputempcommand>'

- name: set remote wakeup rules
  copy: src=remote_wakeup_rules dest={{ REMOTE_WAKEUP_RULES_FILE }} owner=xbmc group=xbmc mode=0644

- name: optimize Installation
  shell: {{ item }}
  with_items:
    - "service apparmor stop"
    - "service apparmor teardown"
    - "update-rc.d -f apparmor remove"
    - "apt-get purge apparmor"
  sudo: yes

- name: template rsyslog.conf
  copy: src=rsyslog.conf dest={{ RSYSLOG_FILE }}
  sudo: yes

- name: edit sysctl.conf
  lineinfile: dest={{ SYSCTL_CONF_FILE }} line="{{ item }}" state=present
  with_items:
    - "dev.cdrom.lock=0"
    - "vm.swappiness=10"

- name: cleanup
  shell: {{ item }}
  with_items:
    - 'apt-get -y autoremove'
    - 'apt-get -y autoclean'
    - 'apt-get -y clean'
    - 'chown -R {{ XBMC_USER }}:{{ XBMC_USER }} /home/{{ XBMC_USER }}'
  sudo: yes

- name: reboot
  shell: reboot
  sudo: yes
